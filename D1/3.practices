1. 通过os模块在硬盘上创建目录,删除目录,给文件改名,列目录,改变目录,运行外部命令

	os.mkdir
	os.rmdir
	os.rename
	os.listdir
	os.chdir
	os.system

	1. 进入当前用户的主目录

		os.chdir('C:/users/Administrator')

	2. 列出主目录下所有的文件

		file_list = os.listidr()

	3. 创建一个名为video的目录

		os.mkdir('video')

	4. 把video目录改名为movie

		os.rename('video', 'movie')

	5. 删除movie目录

		os.rmdir('movie')

	6. 打开notepad编辑器

		os.system('notepad')

	7. 创建一个文本文件,往文件中填充若干行数据,然后用notepad打开浏览/编辑

		f = open('notes.txt', 'w')
		for i in range(10):
			f.write('Python is good, #%s\n' % i)
		f.close()
		os.system('notepad notes.txt')


2. 通过 multiprocessing 使用多进程

创建2个进程, 每一个进程都打出当前的时间和进程的标识,持续打十次.

范例程序:

import multiprocessing as mul
from datetime import datetime
import time


def worker(id):
    for i in range(10):
        now = datetime.now()
        print('proc #%s %s' % (id, now), flush=True)


if __name__ == '__main__':
    procs = []

    # 创建进程,并把进程对象保存起来
    for i in range(2):
        p = mul.Process(target=worker, args=(i,))
        p.start()
        procs.append(p)
    
    # 用join方法等待进程结束
    for p in procs:
        p.join()


time.sleep(3)



3. 写一个程序,显示当前时间的这些信息:年,月,日,工作日,时,分,秒
   可以通过查询模块time的strftime 的帮助文档来获知相应的占位符.

	from datetime import datetime
	now = datetime.now()
	text = now.strftime('%a, %Y-%m-%d %H:%M:%S')
	print(text)


4. 写一个程序，把第一个命令行参数(是一个ISO标准的日期时间字符串)解析成时间对象,
   然后以 '%a, %Y-%m-%d %H:%M:%S' 的格式输出到标准输出.

import sys
import time
from datetime import datetime

# 命令行参数必须等于1个
if len(sys.argv) != 2:
    print('usage: time_parse.py <date time string>')
    exit(1)

time_str = sys.argv[1]
time_fmt = '%Y-%m-%d %H:%M:%S'

# 用户输入的时间字符串很可能是不符合规范的,如果遇到这样的不规范时间字符串,
# time.strptime 函数将会抛出ValueErro 异常
try:
    t = time.strptime(time_str, time_fmt)
except ValueError:
    print('invalid time string: %s' % time_str)
    exit(1)

# t是一个时间结构体,其前面6个字段就是年/月/日/时/分/秒
t2 = t[:6]

# 通过 *t2 这样的传参方式把t2里面的6个元素打散,按顺序传递给datetime类的构造函数
dt = datetime(*t2)

# 格式化并输出结果
result = dt.strftime('%a, %Y-%m-%d %H:%M:%S')
print(result)


5. 在练习4的基础上,给程序增加一个功能
   接收第二个参数,这第二个参数表示日期的增量,程序首先解析出第一个参数所表示的具体时间,
   然后计算出与第二个参数所表示的天数 (days) 的和,最后用格式 '%a, %Y-%m-%d %H:%M:%S 输出和.

	delta = timedelta(days=3)
	dt + delta
